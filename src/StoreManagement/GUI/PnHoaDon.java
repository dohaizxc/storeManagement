/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package StoreManagement.GUI;

import StoreManagement.BUS.HoaDonBUS;
import StoreManagement.BUS.NhanVienBUS;
import StoreManagement.BUS.KhachHangBUS;
import StoreManagement.BUS.CTHDBUS;
import StoreManagement.BUS.SanPhamBUS;



import StoreManagement.DTO.HoaDon;
import StoreManagement.DTO.CTHD;

import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

public class PnHoaDon extends javax.swing.JPanel {

    static DefaultTableModel dtmHoaDon;
    static DefaultTableModel dtmCTHD;

    static HoaDonBUS hdBUS = new HoaDonBUS();
    static NhanVienBUS nvBUS = new NhanVienBUS();
    static KhachHangBUS khBUS = new KhachHangBUS();
    static CTHDBUS cthdBUS = new CTHDBUS();
    static SanPhamBUS spBUS = new SanPhamBUS();

    public PnHoaDon() {
        initComponents();
        this.setBounds(0, 0, 1030, 844);
        
        dtmHoaDon = (DefaultTableModel) tblHoaDon.getModel();
        dtmCTHD = (DefaultTableModel) tblCTHD.getModel();
        loadDataTblHD();
    }
    static void loadDataTblHD(){
        dtmHoaDon.setRowCount(0);
        ArrayList<HoaDon> dshd = hdBUS.getListHoaDon();
        for (HoaDon hd : dshd) {
            Vector vec = new Vector();
            vec.add(hd.getMaHD());
            vec.add(nvBUS.getNhanVien(hd.getMaNV()).getTen());
            vec.add(khBUS.getKH(hd.getMaKH()).getHoTen());
            vec.add(hd.getNgayLap());
            vec.add(hd.getTongTien());
            dtmHoaDon.addRow(vec);
        }
    }
    private void loadDataCTHD(String MaHD){
        dtmCTHD.setRowCount(0);
        ArrayList<CTHD> dsCTHD = cthdBUS.getListCTHoaDonById(MaHD);
        
        for (CTHD cthd : dsCTHD) {
            Vector vec = new Vector();
            
            vec.add(cthd.getMaHD());
            vec.add(spBUS.getSPById(cthd.getMaSP()).getTenSP());
            vec.add(cthd.getSoLuong());
            vec.add(cthd.getDonGia());
            vec.add(cthd.getThanhTien());
            dtmCTHD.addRow(vec);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        scrTblSanPham = new javax.swing.JScrollPane();
        tblHoaDon = new MyCustom.MyTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 0), new java.awt.Dimension(32767, 32767));
        scrTblSanPham1 = new javax.swing.JScrollPane();
        tblCTHD = new MyCustom.MyTable();
        jLabel7 = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1030, 844));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel1.setText("Thông tin hóa đơn");

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HD", "Tên nhân viên", "Tên khách hàng", "Ngày lập", "Tổng tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblHoaDon.getTableHeader().setReorderingAllowed(false);
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        scrTblSanPham.setViewportView(tblHoaDon);
        tblHoaDon.getColumnModel().getColumn(0).setPreferredWidth(80);
        tblHoaDon.getColumnModel().getColumn(1).setPreferredWidth(270);
        tblHoaDon.getColumnModel().getColumn(2).setPreferredWidth(120);
        tblHoaDon.getColumnModel().getColumn(3).setPreferredWidth(80);
        tblHoaDon.getColumnModel().getColumn(4).setPreferredWidth(80);

        tblCTHD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã HD", "Tên SP", "Số lượng", "Đơn giá", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Float.class, java.lang.Float.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblCTHD.getTableHeader().setReorderingAllowed(false);
        scrTblSanPham1.setViewportView(tblCTHD);
        tblHoaDon.getColumnModel().getColumn(0).setPreferredWidth(72);
        tblHoaDon.getColumnModel().getColumn(1).setPreferredWidth(282);
        tblHoaDon.getColumnModel().getColumn(2).setPreferredWidth(82);
        tblHoaDon.getColumnModel().getColumn(3).setPreferredWidth(85);
        tblHoaDon.getColumnModel().getColumn(4).setPreferredWidth(138);

        jLabel7.setFont(new java.awt.Font("Arial", 1, 28)); // NOI18N
        jLabel7.setText("Chi tiết hóa đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(357, 357, 357)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(44, Short.MAX_VALUE)
                .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(scrTblSanPham1, javax.swing.GroupLayout.DEFAULT_SIZE, 897, Short.MAX_VALUE)
                    .addComponent(scrTblSanPham))
                .addGap(71, 71, 71))
            .addGroup(layout.createSequentialGroup()
                .addGap(394, 394, 394)
                .addComponent(jLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(253, 253, 253)
                        .addComponent(filler1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(scrTblSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrTblSanPham1, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:
        int row = tblHoaDon.getSelectedRow();
        if (row > -1) {
            String ma = tblHoaDon.getValueAt(row, 0).toString();
            loadDataCTHD(ma);
        }
    }//GEN-LAST:event_tblHoaDonMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane scrTblSanPham;
    private javax.swing.JScrollPane scrTblSanPham1;
    private MyCustom.MyTable tblCTHD;
    private MyCustom.MyTable tblHoaDon;
    // End of variables declaration//GEN-END:variables
}
